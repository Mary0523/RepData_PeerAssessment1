install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
summary(ppm)
quantile(ppm)
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
hist(low)
low
high
hits(ppm,col="green",breaks=100
)
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg<-table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pm25~region,col="red")
boxplot(pm25~region,data=pollution,col="red")
par(mfrow=c(2,1),mar=(4,4,2,1))
par(mfrow=c(2,1),mar=c(4,4,2,1))
subset(pollution,region=="east")
east<-subset(pollution,region=="east")
head(east)
hist(est$pm25,col="green")
hist(east$pm25,col="green")
hist(subset(pollution,region=="west")$pm25,col="green")
with(pollution,plot(latitude,pm25))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,pollution$pm25,col=c(pollution$region))
plot(pollution$latitude,ppm,col=c(pollution$region))
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=c(1,2),mar=c(5,4,2,1))
west<-subset(pollution,region=="west")
plot(west$latitude,west$pm25,main="West")
plot(East$latitude,East$pm25,main="East")
plot(east$latitude,east$pm25,main="East")
?Devices
with(faithful,plot(eruptions,waiting))
title(main = "Old Faitheful Geyser data")
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png,"geyserplot.png")
dev.copy(png,file="geyserplot.png")
dev.off()
set.seed(1234)
par(mar=c(0,0,0,0))
x<-rnorm(12,mean=rep(1:3,each=4),sd=0.2)
y<-rnorm(12,mean=rep(c(1,2,1),each=4),sd=0.2)
dataFrame<-data.frame(x=x,y=y)
dist(dataFrame)
View(dataFrame)
library(swirl)
swirl
swirl()
dist(dataFrame)
hc<-hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=.4,col="red")
5
5
12
abline(h=0.05,col="green")
dist(dFsm)
hc
dataMatrix
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy,col=c("red", "orange", "purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
plot(x,y,pch=19,cex=2)
points(x,y,pch=19,cex=2,col=cols1[newClust])
points(cx,cy,col=c("red", "orange", "purple"),pch=3,cex=2,lwd=2)
plot(denmt)
plot(denmt)
points(cx,cy,col=c("red", "orange", "purple"),pch=3,cex=2,lwd=2)
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols[newClust2])
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col= kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col= kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col= kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col= kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
headmap(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu*diag*matv
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd$d
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,2]
svd2$v[,1:2]
svd2$s
svd2$d
dim(faceData)
(svd1$u[,1]*svd1$d[1])%*%svd1$v
a1<-(svd1$u[,1]*svd1$d[1])%*%t(svd1$v[,1])
myImage(a1)
a1<-svd1$u[,1:2]%*%svd1$d[1:2]%*%t(svd1$v[,1:2])
a2<-svd1$u[,1:2]%*%svd1$d[1:2]%*%t(svd1$v[,1:2])
myImage(a1)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames<-strsplit(cnames,'|',fixed=TRUE)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<pm0$Sample.Value
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol]))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative<-x1<0
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both<-intersect(site0,site1)
both
head(pm0)
cnt0<-subset(pm0,State.Code==36&county.site%in%both)
cnt1<-subset(pm1,State.Code==36&county.site%in%both)
sapply(split(cnt0,cnt$county.site),nrow)
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub<-subset(cnt0,County.Code==63&Site.ID==2008)
pm1sub<-subset(cnt1,County.Code==63&Site.ID==2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(h=median(x0sub),lwd=2,na.rm=TRUE)
abline(h=median(x0sub,na.rm=TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=TRUE),lwd=2)
rng<-range(x0sub,x1sub,na.rm=TRUE)
rng
mn0<-with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1<-with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame()
names(mn0)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
do
d0
mn1
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
points(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg,points(rep(2,52),mrg[,3]))
segments(rep(2,52),mrg[,2],rep(2,52),mrg[,3])
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y, ]
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
0.8*1.6/2
0.64
mypdf
integrate(mypdf,0,1.6)
sqrt(0.5/4)
sqrt(0.5*4)
0.997*0.001
(1-0.985)*(1-0.001)
(0.997*0.001)/(0.000997+0.014985)
1
(1+2+3+4+5+6)/6
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
0.5*(edh+edl)
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
smeans
mean(smeans)
?qunif
qunif(0.75)
(0.3*0.75)/(0.3*0.75+0.7*0.48)
(0.3*0.75)/(0.3*0.75+0.7*0.25)
setwd("C:/Users/may/Desktop/DataScience/Reproducible_Research/Week2/Project1/RepData_PeerAssessment1")
activity<-read.csv("activity.csv")
#change date to date variable
activity$date<-as.Date(activity$date,"%Y-%m-%d")
activity$interval <- factor(activity$interval)
#remove NA data from the analysis
NA_indication <- is.na(as.character(activity$steps))
activity_no_NA <- activity[!NA_indication,]
day_mean<-with(activity_no_NA,tapply(steps,interval,mean))
str(activity_no_NA)
day_mean<-as.data.frame(day_mean)
View(day_mean)
x<-row.names(day_mean)
with(day_mean,plot(x,y,type="l",xlab = "Time interval",ylab="Average number of steps"))
head(day_mean)
with(day_mean,plot(x,day_mean,type="l",xlab = "Time interval",ylab="Average number of steps"))
rownames(max(day_mean$day_mean))
max(day_mean$day_mean)
day_mean$interval<-x
max<-day_mean[which.max(day_mean$day_mean),]$interval
max
with(day_mean,plot(x,day_mean,type="l",xlab = "Time interval",ylab="Average number of steps"),main="Average daily activity pattern",col="blue")
sum(is.na(as.character(activity$steps))
sum(is.na(as.character(activity$steps)))
sum(is.na(as.character(activity$steps)))
for (i in 1:length(activity$steps)){
if(activity[i,steps]=="NA"){
activity[i,steps]==day_mean[activity[i,interval],day_mean]
}
}
head(activity)
length(activity$steps
)
for (i in 1:length(activity$steps)){
if(activity$steps[i]=="NA"){
activity$steps[i]==day_mean[activity[i,interval],day_mean]
}
}
for (i in 1:length(activity$steps)){
if(is.na(activity$steps[i])=T) {
activity$steps[i]==day_mean[activity[i,interval],day_mean]
}
}
for (i in 1:length(activity$steps)){
if(is.na(activity$steps[i])) {
activity$steps[i]<-day_mean$day_mean[as.character(activity[i,interval])]
}
}
for (i in 1:length(activity$steps)){
if(is.na(activity$steps[i])) {
activity$steps[i]<-day_mean$day_mean[as.character(activity$interval[i])]
}
}
View(activity)
head(day_mean)
activity$date<-as.Date(activity$date,"%Y-%m-%d")
activity$interval <- factor(activity$interval)
for (i in 1:length(activity$steps)){
if(is.na(activity$steps[i])) {
activity$steps[i]<-day_mean[,interval==activity$interval[i]]$day_mean
}
}
for (i in 1:length(activity$steps)){
if(is.na(activity$steps[i])) {
activity$steps[i]<-day_mean[,day_mean$interval==activity$interval[i]]$day_mean
}
}
for (i in 1:length(activity$steps)){
if(is.na(activity$steps[i])) {
activity$steps[i]<-subset[day_mean,interval==activity$interval[i]]$day_mean
}
}
for (i in 1:length(activity$steps)){
if(is.na(activity$steps[i])) {
activity$steps[i]<-subset(day_mean,interval==activity$interval[i])$day_mean
}
}
head(day_mean)
View(activity)
View(activity_no_NA)
day_mean
activity$date<-as.Date(activity$date,"%Y-%m-%d")
activity$interval <- factor(activity$interval)
activity_full<-as.data.frame()
activity_full<-as.dataframe()
activity_full<-dataframe()
activity_full<-data.frame()
activity$date<-as.Date(activity$date,"%Y-%m-%d")
activity$interval <- factor(activity$interval)
for (i in 1:length(activity$steps)){
if(is.na(activity$steps[i])) {
full_steps<-subset(day_mean,interval==activity$interval[i])$day_mean
}
else{
full_steps<-activity$steps[i]
}
}
full_steps
full_steps<-data.frame()
for (i in 1:length(activity$steps)){
if(is.na(activity$steps[i])) {
full_steps[i]<-subset(day_mean,interval==activity$interval[i])$day_mean
}
else{
full_steps[i]<-activity$steps[i]
}
}
for (i in 1:length(activity$steps)){
if(is.na(activity$steps[i])) {
full_steps[i]<-subset(day_mean,interval==activity$interval[i])$day_mean
}
else{
full_steps[i]<-activity$steps[i]
}
}
View(full_steps)
rm(full_steps)
for (i in 1:length(activity$steps)){
if(is.na(activity$steps[i])) {
full_steps[i]<-subset(day_mean,interval==activity$interval[i])$day_mean
}
else{
full_steps[i]<-activity$steps[i]
}
}
full_steps<-numeric()
for (i in 1:length(activity$steps)){
if(is.na(activity$steps[i])) {
steps<-subset(day_mean,interval==activity$interval[i])$day_mean
}
else{
steps<-activity$steps[i]
}
full_steps<-c(full_steps,steps)
}
tail(full_steps)
activity_full<-activity
activity_full$full_steps<- full_steps
View(activity_full)
activity$date<-as.Date(activity$date,"%Y-%m-%d")
activity$interval <- factor(activity$interval)
View(activity)
activity<-read.csv("activity.csv")
#change date to date variable
activity$date<-as.Date(activity$date,"%Y-%m-%d")
activity$interval <- factor(activity$interval)
View(activity)
full_steps<-numeric()
for (i in 1:length(activity$steps)){
if(is.na(activity$steps[i])) {
steps<-subset(day_mean,interval==activity$interval[i])$day_mean
}
else{
steps<-activity$steps[i]
}
full_steps<-c(full_steps,steps)
}
activity_full<-activity
activity_full$full_steps<- full_steps
View(activity_full)
day_mean
day_total_nomiss<-with(activity_full,tapply(steps,date,sum))
View(activity_full)
day_total_nomiss<-with(activity_full,tapply(full_steps,date,sum))
?plot
day_total_nomiss<-with(activity_full,tapply(full_steps,date,sum))
weekday<-weekdays(activity_full$date)
activity_full$weekdays<-weekdays(activity_full$date)
View(activity_full)
activity_full$is_weekdays<-ifelse(!(activity_full$weekdays %in% c("Saturday","Sunday")),"Weekdays","Weekends")
View(activity_full)
?tapply
weekday_mean<-with(activity_full,tapply(steps,index=c("interval","is_weekdays"),mean))
weekday_mean<-with(activity_full,tapply(steps,list(interval,is_weekdays),mean))
weekday_mean
View(activity_full)
weekday_mean<-with(activity_full,tapply(full_steps,list(interval,is_weekdays),mean))
weekday_mean
View(activity_full)
weekday_mean <- aggregate(steps ~ interval + is_weekdays, activity_full, mean)
View(weekday_mean)
View(weekday_mean)
xyplot(weekday_mean$steps~weekday_mean$interval|weekday_mean$is_weekdays,xlab="Interval",ylab="Steps",layout=c(1,2),type="l")
library(lattice)
xyplot(weekday_mean$steps~weekday_mean$interval|weekday_mean$is_weekdays,xlab="Interval",ylab="Steps",layout=c(1,2),type="l")
View(weekday_mean)
str(weekday_mean)
weekday_mean$is_weekdays<as.factor(weekday_mean$is_weekdays)
setwd("C:/Users/may/Desktop/DataScience/Reproducible_Research/Week2/Project1/RepData_PeerAssessment1")
activity<-read.csv("activity.csv")
#change date to date variable
activity$date<-as.Date(activity$date,"%Y-%m-%d")
activity$interval <- factor(activity$interval)
#remove NA data from the analysis
NA_indication <- is.na(as.character(activity$steps))
activity_no_NA <- activity[!NA_indication,]
day_mean<-with(activity_no_NA,tapply(steps,interval,mean))
day_mean<-as.data.frame(day_mean)
x<-row.names(day_mean)
with(day_mean,plot(x,day_mean,type="l",xlab = "Time interval",ylab="Average number of steps"),main="Average daily activity pattern",col="blue")
max(day_mean$day_mean)
day_mean$interval<-x
max<-day_mean[which.max(day_mean$day_mean),]$interval
with(day_mean,plot(x,day_mean,type="l",xlab = "Time interval",ylab="Average number of steps",main="Average daily activity pattern",col="blue")
sum(is.na(as.character(activity$steps)))
full_steps<-numeric()
for (i in 1:length(activity$steps)){
if(is.na(activity$steps[i])) {
steps<-subset(day_mean,interval==activity$interval[i])$day_mean
}
else{
steps<-activity$steps[i]
}
full_steps<-c(full_steps,steps)
}
activity_full<-activity
activity_full$full_steps<- full_steps
day_total_nomiss<-with(activity_full,tapply(full_steps,date,sum))
activity_full$weekdays<-weekdays(activity_full$date)
activity_full$is_weekdays<-ifelse(!(activity_full$weekdays %in% c("Saturday","Sunday")),"Weekdays","Weeken
day_total_nomiss<-with(activity_full,tapply(full_steps,date,sum))
activity_full$weekdays<-weekdays(activity_full$date)
activity_full$is_weekdays<-ifelse(!(activity_full$weekdays %in% c("Saturday","Sunday")),"Weekdays","Weekends")
day_total_nomiss<-with(activity_full,tapply(full_steps,date,sum))
activity_full$weekdays<-weekdays(activity_full$date)
activity_full$is_weekdays<-ifelse(!(activity_full$weekdays %in% c("Saturday","Sunday")),"Weekdays","Weekends")
weekday_mean <- aggregate(steps ~ interval + is_weekdays, activity_full, mean)
head(weekday_mean)
library(lattice)
xyplot(weekday_mean$steps~weekday_mean$interval|weekday_mean$is_weekdays,xlab="Interval",ylab="Steps",layout=c(1,2),type="l",scales=list(
y=list(
at=c(0,500,1000,2000))
))
library(ggplot2)
g<-ggplot(weekday_mean,aes(x=interval,y=steps))
g+geom_line()+
facet_grid(is_weekdays ~ .)+
labs(title="Activity patterns for weekdays and weekends")+
labs(x="Interval",y="Number of steps")
g<-ggplot(weekday_mean,aes(x=interval,y=steps))
g+geom_line()
g+geom_line()+
facet_grid(. ~ is_weekdays)+
labs(title="Activity patterns for weekdays and weekends")+
labs(x="Interval",y="Number of steps")
str(weekday_mean)
weekday_mean$is_weekdays <- factor(weekday_mean$is_weekdays)
str(weekday_mean)
g<-ggplot(weekday_mean,aes(x=interval,y=steps))
g+geom_line()+
facet_grid(is_weekdays ~ .)+
labs(title="Activity patterns for weekdays and weekends")+
labs(x="Interval",y="Number of steps")
g+geom_line()+
facet_grid(. ~ is_weekdays)+
labs(title="Activity patterns for weekdays and weekends")+
labs(x="Interval",y="Number of steps")
